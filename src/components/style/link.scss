@import "mixins/mixins";
@import "common/colors";
@include b("link") {
  text-decoration: none;
  transition: 0.3s;
  position: relative;
  @each $item
    in(
      "default",
      "primary",
      "info",
      "warn",
      "danger",
      "primary-dark",
      "info-dark",
      "warn-dark",
      "danger-dark"
    )
  {
    @if ($item== "default") {
      @include e($item) {
        color: rgba(0, 0, 0, 0.9);
        &:hover {
          color: rgba(0, 0, 0, 0.7);
        }
        &:active {
          color: rgba(0, 0, 0, 0.5);
        }
      }
      @include e($item + "-dark") {
        color: rgba(255, 255, 255, 0.9);
        &:hover {
          color: rgba(255, 255, 255, 0.7);
        }
        &:active {
          color: rgba(255, 255, 255, 0.5);
        }
      }
    } @else {
      @include e($item) {
        $_temp_color: map_get($colorMap, $item);
        color: $_temp_color;
        @if (str_index($item, "dark")) {
          &:hover {
            color: mix($_temp_color, #ffffff, 60%);
            &:after {
              background-color: mix($_temp_color, #ffffff, 60%);
            }
          }
        } @else {
          &:hover {
            color: mix($_temp_color, #000000, 60%);
            &:after {
              background-color: mix($_temp_color, #000000, 60%);
            }
          }
        }
      }
    }
  }

  @include state("under-line") {
    &:after {
      content: "";
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 2px;
      transition: 0.3s;
      opacity: 0;
      transform: scaleX(0.3);
    }
    &:hover:after {
      transform: scaleX(1);
      opacity: 1;
    }
  }

  @include state("disabled") {
    cursor: not-allowed;
    opacity: 0.5;
    &:hover {
      &:after {
        opacity: 0;
      }
    }
  }
}
