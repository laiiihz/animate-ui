@import "mixins/mixins";
@import "common/colors";
@include b("button") {
  cursor: pointer;
  display: inline-block;
  appearance: none;
  outline: none;
  transition: 0.3s;
  border: 2px solid rgba(0, 0, 0, 0);
  line-height: 1;
  box-shadow: $elevation1;
  background-color: white;
  border-radius: 5px;
  margin: 5px;
  box-sizing: border-box;
  font-size: 16px;
  &:hover,
  &:focus {
    box-shadow: $elevation3;
  }
  &:active {
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
  }
  @include e("icon") {
    font-size: 12px;
    transform: scale(2);
  }
  @include e("icon-anime") {
    transition: 0.5s all;
    transform: scale(2) translateX(-5px);
  }
  @include e("text-anime") {
    transition: 0.5s all;
    display: inline-block;
    transform: translateX(5px);
  }
  @include state("disabled") {
    background-color: grey;
    cursor: not-allowed;
  }

  @include state("round") {
    border-radius: 30px;
  }

  @include state("outline") {
    border: 2px solid rgba(0, 0, 0, 0.4);
  }

  @include state("dash") {
    border: 2px rgba(0, 0, 0, 0.3) dashed;
  }

  @include state("rect") {
    border-radius: 0;
  }

  @include state("bold") {
    font-weight: bold;
  }

  @include state("text") {
    box-shadow: unset;
    color: $primary_color;
    background-color: transparent;
    &:hover,
    &:focus {
      color: mix($primary_color, #ffffff, 60%);
      background-color: rgba(0, 0, 0, 0.05);
    }
    &:active {
      color: mix($primary_color, #000000, 60%);
    }
  }

  @include state("circle") {
    height: 36px;
    width: 36px;
    padding: unset;
    border-radius: 50%;
    margin: 5px;
  }

  @include state("flat") {
    box-shadow: unset;
    color: white;
    position: relative;
    &:hover,
    &:focus {
      box-shadow: 0 0 0 5px mix($primary_color, #ffffff, 30%);
    }
    &:active {
      box-shadow: 0 0 0 2px mix($primary_color, #ffffff, 30%);
    }
  }

  @include state("outline") {
    box-shadow: unset;
    &:hover,
    &:focus {
      box-shadow: $elevation2;
    }
    &:active {
      box-shadow: unset;
    }
  }

  @include state("art-elevation") {
    box-shadow: $art_elevation2;
    &:hover,
    &:focus {
      box-shadow: $art_elevation3;
    }
    &:active {
      box-shadow: $art_elevation1;
    }
  }

  @include state("dark") {
    background-color: #333333;
    color: white;
  }

  /*
  COLORS
   */
  @each $item in ("default", "primary", "warn", "danger", "info") {
    @if ($item== "default") {
      @include m("default") {
        background-color: white;
      }
    } @else {
      @include m($item) {
        background-color: map_get($colorMap, $item);
      }
    }
  }

  /*
  SIZE
   */
  @include m("large") {
    padding: 12px 20px;
    font-size: 20px;
  }

  @include m("medium") {
    padding: 8px 16px;
    font-size: 16px;
  }

  @include m("small") {
    padding: 4px 12px;
    font-size: 12px;
  }
}

@include b("button-anime") {
  &:hover .a-button__icon-anime {
    transform: translateX(15px) scale(2);
    opacity: 0;
  }
  &:hover .a-button__text-anime {
    transform: translateX(-5px);
  }
}
