@import "static";

@function selectorToString($selector) {
  $selector: inspect($selector);
  $selector: str_slice($selector, 2, -1);
  @return $selector;
}

@function containModifier($selector) {
  $selector: selectorToString($selector);
  @if str_index($selector, $modifier-separator) {
    @return true;
  } @else {
    @return false;
  }
}

@function containWhenFlag($selector) {
  $selector: selectorToString($selector);
  @if str_index($selector, $state-prefix) {
    @return true;
  } @else {
    @return false;
  }
}

@function containerPseudoClass($selector) {
  $selector: selectorToString($selector);
  @if str_index($selector, ":") {
    @return true;
  } @else {
    @return false;
  }
}

@function hitSpecialRule($selector) {
  @return containerPseudoClass($selector) or containModifier($selector) or
    containWhenFlag($selector);
}

@mixin animation_enter($prefix, $time: 0.3s) {
  $prefix_enter_active: $prefix + "-enter-active";
  $prefix_enter: $prefix + "-enter";
  .#{$prefix_enter_active} {
    transition: all $time ease-in-out;
  }
  .#{$prefix_enter} {
    @content;
  }
}

@mixin animation_leave($prefix, $time: 0.3s) {
  $prefix_leave_active: $prefix + "-leave-active";
  $prefix_leave: $prefix + "-leave-to";
  .#{$prefix_leave_active} {
    transition: all $time ease-in-out;
  }
  .#{$prefix_leave} {
    @content;
  }
}
